syntax = "proto3";
package service.account;
option go_package = "api";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message BaseInfoReply {
    int64 ID = 1 ;

    string UserName  = 2 ;

    int32  Gender = 3 ;

    string  Introduction = 4 ;

    string Avatar  = 5 ;

    bool IDCert  = 6 ;

    bool WorkCert  = 7 ;

    bool IsOrg  = 8 ;

    bool IsVIP  = 9 ;
}

message BaseInfosReply {
    // member基本信息集合
    map<int64, BaseInfoReply> base_infos = 1;
}

message SelfProfile {
    int64 ID = 1;

    string Mobile = 2;

    string Email = 3;

    string Prefix = 4;

    string UserName  = 5 ;

    int32  Gender = 6 ;

    int32 BirthYear = 7;
    int32 BirthMonth = 8;
    int32 BirthDay = 9;

    string  Introduction = 10;

    string Avatar  = 11;

    int32 Source  = 12;

    int64  Location = 13;

    string  LocationString = 14;

    bool IDCert  = 15;

    int32 IDCertStatus = 16;

    bool WorkCert  = 17;

	int32 WorkCertStatus = 18;

    string IP = 19;

    bool IsOrg  = 20;

    bool IsVIP  = 21;

    string Role = 22;

    int64 CreatedAt  = 23 ;

    int64 UpdatedAt  = 24 ;

    AccountStatInfo Stat = 25 ;

    Setting Setting = 26;
}


message Setting {
    bool ActivityLike = 1;
    bool ActivityComment = 2;
    bool ActivityFollowTopic= 3;
    bool ActivityFollowMember= 4;
    bool NotifyLike = 5;
    bool NotifyComment = 6;
    bool NotifyNewFans= 7;
    bool NotifyNewMember= 8;
    string Language = 9;
}


message AccountStatInfo {
    int32 FollowingCount = 1 ;

    int32 FansCount = 2 ;

    int32 BlackCount = 3 ;

    int32 TopicCount  = 4 ;

    int32 ArticleCount  = 5 ;

    int32 DiscussionCount  = 6 ;
}

message MemberInfoReply {
    int64 ID = 1;

    string UserName  = 2 ;

    int32  Gender = 3 ;

    string  Introduction = 4 ;

    int64  Location = 5 ;

    string  LocationString = 6 ;

    string Avatar  = 7 ;

    bool IDCert  = 8 ;

    bool WorkCert  = 9 ;

    bool IsOrg  = 10 ;

    bool IsVIP  = 11 ;

    int64 CreatedAt  = 12 ;

    AccountStatInfo Stat = 13 ;
}



message AidReq {
    int64 aid = 1 ;
    string remoteIP = 2 ;
}

message AidsReq {
    // aid 列表
    repeated int64 aids = 1 ;
    string remoteIP = 2 ;
}


service Account {
    rpc MemberInfo(AidReq) returns (MemberInfoReply);

    rpc SelfProfileInfo(AidReq) returns (SelfProfile);

    rpc BasicInfo(AidReq) returns (BaseInfoReply);

    rpc AccountStat(AidReq) returns (AccountStatInfo);

    rpc BaseInfos(AidsReq) returns (BaseInfosReply);
}
