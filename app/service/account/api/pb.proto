syntax = "proto3";
package service.account;
option go_package = "api";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message EmptyStruct {
}

message BaseInfoReply {
    int64 ID = 1 ;

    string UserName  = 2 ;

    int32  Gender = 3 ;

    string  Introduction = 4 ;

    string Avatar  = 5 ;

    bool IDCert  = 6 ;

    bool WorkCert  = 7 ;

    bool IsOrg  = 8 ;

    bool IsVIP  = 9 ;

    string Role = 10;

    AccountStatInfo Stat = 11 ;

    bool IsLock = 12;
}

message BaseInfosReply {
    // member基本信息集合
    map<int64, BaseInfoReply> base_infos = 1;
}

message SettingReq {
    int64 Aid = 1;
    map<string, bool> Settings = 2;
    string Language = 3;
    bool UseMaster = 4;
}

message SelfProfile {
    int64 ID = 1;

    string Mobile = 2;

    string Email = 3;

    string Prefix = 4;

    string UserName  = 5 ;

    int32  Gender = 6 ;

    int32 BirthYear = 7;
    int32 BirthMonth = 8;
    int32 BirthDay = 9;

    string  Introduction = 10;

    string Avatar  = 11;

    int32 Source  = 12;

    int64  Location = 13;

    string  LocationString = 14;

    bool IDCert  = 15;

    int32 IDCertStatus = 16;

    bool WorkCert  = 17;

	int32 WorkCertStatus = 18;

    string IP = 19;

    bool IsOrg  = 20;

    bool IsVIP  = 21;

    string Role = 22;

    int64 CreatedAt  = 23 ;

    int64 UpdatedAt  = 24 ;

    AccountStatInfo Stat = 25 ;

    Setting Setting = 26;

    string Company = 27;

    string Position = 28;
}


message Setting {
    bool ActivityLike = 1;
    bool ActivityComment = 2;
    bool ActivityFollowTopic= 3;
    bool ActivityFollowMember= 4;
    bool NotifyLike = 5;
    bool NotifyComment = 6;
    bool NotifyNewFans= 7;
    bool NotifyNewMember= 8;
    string Language = 9;
}


message AccountStatInfo {
    int32 FollowingCount = 1 ;

    int32 FansCount = 2 ;

    int32 BlackCount = 3 ;

    int32 TopicCount  = 4 ;

    int32 ArticleCount  = 5 ;

    int32 DiscussionCount  = 6 ;
}

message MemberInfoReply {
    int64 ID = 1;

    string UserName  = 2 ;

    int32  Gender = 3 ;

    string  Introduction = 4 ;

    int64  Location = 5 ;

    string  LocationString = 6 ;

    string Avatar  = 7 ;

    bool IDCert  = 8 ;

    bool WorkCert  = 9 ;

    bool IsOrg  = 10 ;

    bool IsVIP  = 11 ;

    int64 CreatedAt  = 12 ;

    AccountStatInfo Stat = 13 ;

    string Company = 14;

    string Position = 15;

    bool IsLock = 16;
}

message AdminAccountItem {
    int64 ID = 1;

    string UserName  = 2 ;

    int32  Gender = 3 ;

    string  Introduction = 4 ;

    int64  Location = 5 ;

    string  LocationString = 6 ;

    string Avatar  = 7 ;

    bool IDCert  = 8 ;

    bool WorkCert  = 9 ;

    bool IsOrg  = 10 ;

    bool IsVIP  = 11 ;

    int64 CreatedAt  = 12 ;

    AccountStatInfo Stat = 13 ;

    string Company = 14;

    string Position = 15;

    bool IsLock = 16;

    string Email  = 17 ;
    string Prefix  = 18 ;
    string Mobile  = 19 ;
}



message AidReq {
    int64 aid = 1 ;
    string remoteIP = 2 ;
    bool UseMaster = 3;
}

message AidResp {
    int64 aid = 1 ;
}

message AnnulReq {
    int64 aid = 1 ;
    bool UseMaster = 3;
}

message EmailReq {
    string email = 1 ;
    bool UseMaster = 2;
}

message MobileReq {
    string mobile = 1 ;
    string prefix = 2 ;
    bool UseMaster = 3;
}

message ExistResp {
    bool Exist = 1;
}

message AidsReq {
    // aid 列表
    repeated int64 aids = 1 ;
    string remoteIP = 2 ;
    bool UseMaster = 3;
}

message DBAccount {
    int64    ID                    = 1;
    string   Mobile                = 2;
    string   Email                 = 3;
    string   UserName              = 4;
    string   Role                  = 6;
    int32    Gender                = 8;
    int32    BirthYear             = 9;
    int32    BirthMonth            = 10;
    int32    BirthDay              = 11;
    int64    Location              = 12;
    string   Introduction          = 13;
    string   Avatar                = 14;
    int32    Source                = 15;
    int64    IP                    = 16;
    bool     IDCert                = 17;
    bool     WorkCert              = 18;
    bool     IsOrg                 = 19;
    bool     IsVIP                 = 20;
    int64    CreatedAt             = 21;
    int64    UpdatedAt             = 22;
    bool     IsLock                 = 23;
    string   Prefix                 = 24;
    bool     Deactive               = 25;
    string     Password               = 26;
    string     Salt               = 27;
}


message UpdateProfileReq {
    oneof Avatar {
        string AvatarValue  = 1;
    }

    oneof UserName {
        string UserNameValue  = 2;
    }

    oneof Gender {
        int32 GenderValue  = 3;
    }

    oneof Location {
        int64 LocationValue  = 4;
    }

    oneof BirthYear {
        int32 BirthYearValue  = 5;
    }

    oneof BirthMonth {
        int32 BirthMonthValue  = 6;
    }

    oneof BirthDay {
        int32 BirthDayValue  = 7;
    }

    oneof Introduction {
        string IntroductionValue  = 8;
    }

    oneof Password {
        string PasswordValue  = 9;
    }

    int64 AccountID  = 10;
    int64 Aid  = 11;
}


message AccountsPagedReq {
    int64 Aid = 1 [(gogoproto.jsontag) = "aid"];
    int32 Limit = 2 [(gogoproto.jsontag) = "limit"];
    int32 Offset = 3 [(gogoproto.jsontag) = "offset"];
}

message IDsResp {
    repeated int64 IDs = 1 [(gogoproto.jsontag) = 'ids'];
}

message AdminAccountsResp {
    repeated AdminAccountItem Items = 1;
}



message IDCertInfo {
    int64 AccountID = 1;
    int32 Status = 2;
    string AuditConclusions =  4;
    string Name = 5;
    string IdentificationNumber  =  6;
    string IDCardType =  7;
    string IDCardStartDate =  8;
    string IDCardExpiry =  9;
    string Address =  10;
    string Sex = 11;
    string IDCardFrontPic =  12;
    string IDCardBackPic = 13;
    string FacePic = 14;
    string EthnicGroup = 15;
    int64 CreatedAt = 16;
    int64 UpdatedAt = 17;
}

message WorkCertInfo {
    int64 AccountID = 1;
    int32 Status = 2;
    string WorkPic =  4;
    string OtherPic = 5;
    string Company  =  6;
    string Department =  7;
    string Position =  8;
    int64 ExpiresAt =  9;
    string AuditResult =  10;
    int64 CreatedAt = 16;
    int64 UpdatedAt = 17;
}

message IDCertStatus {
    int32 Status = 1;
}


message WorkCertStatus {
    int32 Status = 1;
}

message WorkCertReq {
    int64 AccountID = 1;
    string WorkPic =  4;
    string OtherPic = 5;
    string Company  =  6;
    string Department =  7;
    string Position =  8;
    int64 ExpiresAt =  9;
}

message AuditWorkCertReq {
    int64 AccountID = 1;
    int64 Aid = 2;
    string AuditResult = 3;
    bool Approve = 4;
}


message RequestIDCertResp {
	string CloudauthPageUrl  = 1;

	STSToken STSToken  = 2;

	VerifyToken VerifyToken = 3;
}

message VerifyToken {
	// 一次认证会话的标识。
	string Token  = 1;
	// 认证会话超时时间，单位为秒。一般为1,800s。
	int32 DurationSeconds = 2;
}

message STSToken {
	// OSS AccessKey ID。
	// required: true
	string AccessKeyId = 1;
	// OSS AccessKey密钥
	string AccessKeySecret = 2;
	// STS token过期时间。
	string Expiration = 3;
	// OSS endpoint
	string EndPoint = 4;
	// OSS bucket，认证服务指定的文件上传 Bucket。
	string BucketName = 5;
	//  一个认证请求生成的用来上传的目录，业务方需要将文件上传到这个目录。
	string Path = 6;
	// STS 访问Token。
	string Token = 7;
}

message WorkCertPagedReq {
    int32 Status = 1;
    int32 Limit = 2 ;
    int32 Offset = 3;
    int64 Aid = 4;
}

message WorkCertItem {
    int64 ID  = 1;
    int64 AccountID   = 3;
    int32  Status = 4;
    string WorkPic     = 5;
    string OtherPic    = 6;
    string Company     = 7;
    string Department  = 8;
    string Position    = 9;
    int64 ExpiresAt   = 10;
    string AuditResult = 11;
    int64 CreatedAt   = 12;
    int64 UpdatedAt   = 13;
}

message WorkCertHistoryItem {
    int64 ID  = 1;
    int64 AccountID   = 3;
    int32  Status = 4;
    string WorkPic     = 5;
    string OtherPic    = 6;
    string Company     = 7;
    string Department  = 8;
    string Position    = 9;
    int64 ExpiresAt   = 10;
    string AuditResult = 11;
    int64 ManagerID   = 13;
    int64 CreatedAt   = 14;
    int64 UpdatedAt   = 15;
}

message WorkCertPagedResp {
    repeated WorkCertItem Items = 1;
}

message WorkCertHistoriesPagedReq {
    int32 Limit = 2 ;
    int32 Offset = 3;
    int64 AccountID = 4;
    int64 Aid = 5;
}
message WorkCertHistoriesPagedResp {
    repeated WorkCertHistoryItem Items = 1;
}

service Account {
    rpc EmailExist(EmailReq) returns (ExistResp);

    rpc MobileExist(MobileReq) returns (ExistResp);

    rpc UpdateSetting(SettingReq) returns (EmptyStruct);

    rpc AccountInfo(AidReq) returns (DBAccount);

    rpc GetAccountByEmail(EmailReq) returns (DBAccount);

    rpc GetAccountByMobile(MobileReq) returns (DBAccount);

    rpc MemberInfo(AidReq) returns (MemberInfoReply);

    rpc UpdateProfile(UpdateProfileReq) returns (EmptyStruct);

    rpc SelfProfileInfo(AidReq) returns (SelfProfile);

    rpc BasicInfo(AidReq) returns (BaseInfoReply);

    rpc SettingInfo(AidReq) returns (Setting);

    rpc AccountStat(AidReq) returns (AccountStatInfo);

    rpc BaseInfos(AidsReq) returns (BaseInfosReply);

    rpc AllAccountsIDs(AidReq) returns (IDsResp);

    rpc AllAccountsIDsPaged(AccountsPagedReq) returns (IDsResp);

    rpc AllAccountsPaged(AccountsPagedReq) returns (AdminAccountsResp);

    rpc RequestIDCert(AidReq) returns (RequestIDCertResp);
    rpc RefreshIDCertStatus(AidReq) returns (IDCertStatus);
    rpc GetIDCert(AidReq) returns (IDCertInfo);
    rpc GetIDCertStatus(AidReq) returns (IDCertStatus);

    rpc RequestWorkCert(WorkCertReq) returns (EmptyStruct);
    rpc AuditWorkCert(AuditWorkCertReq) returns (EmptyStruct);
    rpc GetWorkCert(AidReq) returns (WorkCertInfo);

    rpc GetWorkCertsPaged(WorkCertPagedReq) returns (WorkCertPagedResp);
    rpc GetWorkCertHistoriesPaged(WorkCertHistoriesPagedReq) returns (WorkCertHistoriesPagedResp);

    rpc GetWorkCertStatus(AidReq) returns (WorkCertStatus);
}
