syntax = "proto3";
package service.account;
option go_package = "api";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message BaseInfoReply {
    int64 ID = 1 [(gogoproto.jsontag) = "id"] ;

    string UserName  = 2 [(gogoproto.jsontag) = "user_name"] ;

    int32  Gender = 3 [(gogoproto.jsontag) = "gender"] ;

    string  Introduction = 4 [(gogoproto.jsontag) = "introduction"] ;

    string Avatar  = 5 [(gogoproto.jsontag) = "avatar"] ;

    bool IDCert  = 6 [(gogoproto.jsontag) = "id_cert"] ;

    bool WorkCert  = 7 [(gogoproto.jsontag) = "work_cert"] ;

    bool IsOrg  = 8 [(gogoproto.jsontag) = "is_org"] ;

    bool IsVIP  = 9 [(gogoproto.jsontag) = "is_vip"] ;
}

message BaseInfosReply {
    // member基本信息集合
    map<int64, BaseInfoReply> base_infos = 1;
}

message ProfileReply {
    int64 ID = 1 [(gogoproto.jsontag) = "id"] ;

    string UserName  = 2 [(gogoproto.jsontag) = "user_name"] ;

    int32  Gender = 3 [(gogoproto.jsontag) = "gender"] ;

    string  Introduction = 4 [(gogoproto.jsontag) = "introduction"] ;

    int64  Location = 5 [(gogoproto.jsontag) = "location"] ;

    string  LocationString = 6 [(gogoproto.jsontag) = "location_string"] ;

    string Avatar  = 7 [(gogoproto.jsontag) = "avatar"] ;

    bool IDCert  = 8 [(gogoproto.jsontag) = "id_cert"] ;

    bool WorkCert  = 9 [(gogoproto.jsontag) = "work_cert"] ;

    bool IsOrg  = 10 [(gogoproto.jsontag) = "is_org"] ;

    bool IsVIP  = 11 [(gogoproto.jsontag) = "is_vip"] ;

    int64 CreatedAt  = 12 [(gogoproto.jsontag) = "created_at"] ;

    AccountStatInfo Stat = 13 [(gogoproto.jsontag) = "stat"];
}

message AccountStatInfo {
    int32 Following = 1 [(gogoproto.jsontag) = "following"];

    int32 Fans = 2 [(gogoproto.jsontag) = "fans"];

    int32 Black = 3 [(gogoproto.jsontag) = "black"];

    int32 TopicCount  = 4 [(gogoproto.jsontag) = "topic_count"] ;

    int32 ArticleCount  = 5 [(gogoproto.jsontag) = "article_count"] ;

    int32 DiscussionCount  = 6 [(gogoproto.jsontag) = "discussion_count"] ;
}

message AidReq {
    int64 aid = 1 [(gogoproto.jsontag) = "aid"] ;
    string remoteIP = 2 [ (gogoproto.jsontag) = "remoteIP" ];
}

message AidsReq {
    // aid 列表
    repeated int64 aids = 1 [ (gogoproto.jsontag) = "aids" ];
    string remoteIP = 2 [ (gogoproto.jsontag) = "remoteIP" ];
}


service Account {
    rpc Profile(AidReq) returns (ProfileReply);

    rpc BasicInfo(AidReq) returns (BaseInfoReply);

    rpc AccountStat(AidReq) returns (AccountStatInfo);

    rpc BaseInfos(AidsReq) returns (BaseInfosReply);
}
