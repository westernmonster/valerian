// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pb.proto

package api

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// EmptyStruct 空的message，对应真实service只返回error，没有具体返回值
type EmptyStruct struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyStruct) Reset()         { *m = EmptyStruct{} }
func (m *EmptyStruct) String() string { return proto.CompactTextString(m) }
func (*EmptyStruct) ProtoMessage()    {}
func (*EmptyStruct) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{0}
}
func (m *EmptyStruct) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *EmptyStruct) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_EmptyStruct.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *EmptyStruct) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyStruct.Merge(m, src)
}
func (m *EmptyStruct) XXX_Size() int {
	return m.Size()
}
func (m *EmptyStruct) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyStruct.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyStruct proto.InternalMessageInfo

type MemberRoleReply struct {
	IsMember             bool     `protobuf:"varint,1,opt,name=IsMember,proto3" json:"is_member"`
	Role                 string   `protobuf:"bytes,2,opt,name=Role,proto3" json:"role"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemberRoleReply) Reset()         { *m = MemberRoleReply{} }
func (m *MemberRoleReply) String() string { return proto.CompactTextString(m) }
func (*MemberRoleReply) ProtoMessage()    {}
func (*MemberRoleReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{1}
}
func (m *MemberRoleReply) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MemberRoleReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MemberRoleReply.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MemberRoleReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemberRoleReply.Merge(m, src)
}
func (m *MemberRoleReply) XXX_Size() int {
	return m.Size()
}
func (m *MemberRoleReply) XXX_DiscardUnknown() {
	xxx_messageInfo_MemberRoleReply.DiscardUnknown(m)
}

var xxx_messageInfo_MemberRoleReply proto.InternalMessageInfo

func (m *MemberRoleReply) GetIsMember() bool {
	if m != nil {
		return m.IsMember
	}
	return false
}

func (m *MemberRoleReply) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type TopicInfo struct {
	ID   int64  `protobuf:"varint,1,opt,name=ID,proto3" json:"id"`
	Name string `protobuf:"bytes,2,opt,name=Name,proto3" json:"name"`
	// Types that are valid to be assigned to Avatar:
	//	*TopicInfo_AvatarValue
	Avatar isTopicInfo_Avatar `protobuf_oneof:"Avatar"`
	// Types that are valid to be assigned to Bg:
	//	*TopicInfo_BgValue
	Bg              isTopicInfo_Bg `protobuf_oneof:"Bg"`
	Introduction    string         `protobuf:"bytes,5,opt,name=Introduction,proto3" json:"introduction"`
	AllowDiscuss    bool           `protobuf:"varint,6,opt,name=AllowDiscuss,proto3" json:"allow_discuss"`
	AllowChat       bool           `protobuf:"varint,7,opt,name=AllowChat,proto3" json:"allow_chat"`
	IsPrivate       bool           `protobuf:"varint,8,opt,name=IsPrivate,proto3" json:"is_private"`
	ViewPermission  string         `protobuf:"bytes,9,opt,name=ViewPermission,proto3" json:"view_permission"`
	EditPermission  string         `protobuf:"bytes,10,opt,name=EditPermission,proto3" json:"edit_permission"`
	JoinPermission  string         `protobuf:"bytes,11,opt,name=JoinPermission,proto3" json:"join_permission"`
	CatalogViewType string         `protobuf:"bytes,12,opt,name=CatalogViewType,proto3" json:"catalog_view_type"`
	TopicHome       string         `protobuf:"bytes,13,opt,name=TopicHome,proto3" json:"topic_home"`
	CreatedBy       int64          `protobuf:"varint,14,opt,name=CreatedBy,proto3" json:"created_by"`
	// unix timestamp
	CreatedAt int64 `protobuf:"varint,15,opt,name=CreatedAt,proto3" json:"created_at"`
	// unix timestamp
	UpdatedAt            int64    `protobuf:"varint,16,opt,name=UpdatedAt,proto3" json:"updated_at"`
	MemberCount          int32    `protobuf:"varint,17,opt,name=MemberCount,proto3" json:"member_count"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicInfo) Reset()         { *m = TopicInfo{} }
func (m *TopicInfo) String() string { return proto.CompactTextString(m) }
func (*TopicInfo) ProtoMessage()    {}
func (*TopicInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{2}
}
func (m *TopicInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicInfo.Merge(m, src)
}
func (m *TopicInfo) XXX_Size() int {
	return m.Size()
}
func (m *TopicInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TopicInfo proto.InternalMessageInfo

type isTopicInfo_Avatar interface {
	isTopicInfo_Avatar()
	MarshalTo([]byte) (int, error)
	Size() int
}
type isTopicInfo_Bg interface {
	isTopicInfo_Bg()
	MarshalTo([]byte) (int, error)
	Size() int
}

type TopicInfo_AvatarValue struct {
	AvatarValue string `protobuf:"bytes,3,opt,name=AvatarValue,proto3,oneof" json:"avatar"`
}
type TopicInfo_BgValue struct {
	BgValue string `protobuf:"bytes,4,opt,name=BgValue,proto3,oneof" json:"bg"`
}

func (*TopicInfo_AvatarValue) isTopicInfo_Avatar() {}
func (*TopicInfo_BgValue) isTopicInfo_Bg()         {}

func (m *TopicInfo) GetAvatar() isTopicInfo_Avatar {
	if m != nil {
		return m.Avatar
	}
	return nil
}
func (m *TopicInfo) GetBg() isTopicInfo_Bg {
	if m != nil {
		return m.Bg
	}
	return nil
}

func (m *TopicInfo) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *TopicInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TopicInfo) GetAvatarValue() string {
	if x, ok := m.GetAvatar().(*TopicInfo_AvatarValue); ok {
		return x.AvatarValue
	}
	return ""
}

func (m *TopicInfo) GetBgValue() string {
	if x, ok := m.GetBg().(*TopicInfo_BgValue); ok {
		return x.BgValue
	}
	return ""
}

func (m *TopicInfo) GetIntroduction() string {
	if m != nil {
		return m.Introduction
	}
	return ""
}

func (m *TopicInfo) GetAllowDiscuss() bool {
	if m != nil {
		return m.AllowDiscuss
	}
	return false
}

func (m *TopicInfo) GetAllowChat() bool {
	if m != nil {
		return m.AllowChat
	}
	return false
}

func (m *TopicInfo) GetIsPrivate() bool {
	if m != nil {
		return m.IsPrivate
	}
	return false
}

func (m *TopicInfo) GetViewPermission() string {
	if m != nil {
		return m.ViewPermission
	}
	return ""
}

func (m *TopicInfo) GetEditPermission() string {
	if m != nil {
		return m.EditPermission
	}
	return ""
}

func (m *TopicInfo) GetJoinPermission() string {
	if m != nil {
		return m.JoinPermission
	}
	return ""
}

func (m *TopicInfo) GetCatalogViewType() string {
	if m != nil {
		return m.CatalogViewType
	}
	return ""
}

func (m *TopicInfo) GetTopicHome() string {
	if m != nil {
		return m.TopicHome
	}
	return ""
}

func (m *TopicInfo) GetCreatedBy() int64 {
	if m != nil {
		return m.CreatedBy
	}
	return 0
}

func (m *TopicInfo) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *TopicInfo) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *TopicInfo) GetMemberCount() int32 {
	if m != nil {
		return m.MemberCount
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TopicInfo) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TopicInfo_AvatarValue)(nil),
		(*TopicInfo_BgValue)(nil),
	}
}

type TopicMetaInfo struct {
	CanFollow            bool     `protobuf:"varint,1,opt,name=CanFollow,proto3" json:"can_follow"`
	CanEdit              bool     `protobuf:"varint,2,opt,name=CanEdit,proto3" json:"can_edit"`
	Fav                  bool     `protobuf:"varint,3,opt,name=Fav,proto3" json:"fav"`
	CanView              bool     `protobuf:"varint,4,opt,name=CanView,proto3" json:"can_view"`
	FollowStatus         int32    `protobuf:"varint,5,opt,name=FollowStatus,proto3" json:"follow_status"`
	IsMember             bool     `protobuf:"varint,6,opt,name=IsMember,proto3" json:"is_member"`
	MemberRole           string   `protobuf:"bytes,7,opt,name=MemberRole,proto3" json:"member_role"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicMetaInfo) Reset()         { *m = TopicMetaInfo{} }
func (m *TopicMetaInfo) String() string { return proto.CompactTextString(m) }
func (*TopicMetaInfo) ProtoMessage()    {}
func (*TopicMetaInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{3}
}
func (m *TopicMetaInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicMetaInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicMetaInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicMetaInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicMetaInfo.Merge(m, src)
}
func (m *TopicMetaInfo) XXX_Size() int {
	return m.Size()
}
func (m *TopicMetaInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicMetaInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TopicMetaInfo proto.InternalMessageInfo

func (m *TopicMetaInfo) GetCanFollow() bool {
	if m != nil {
		return m.CanFollow
	}
	return false
}

func (m *TopicMetaInfo) GetCanEdit() bool {
	if m != nil {
		return m.CanEdit
	}
	return false
}

func (m *TopicMetaInfo) GetFav() bool {
	if m != nil {
		return m.Fav
	}
	return false
}

func (m *TopicMetaInfo) GetCanView() bool {
	if m != nil {
		return m.CanView
	}
	return false
}

func (m *TopicMetaInfo) GetFollowStatus() int32 {
	if m != nil {
		return m.FollowStatus
	}
	return 0
}

func (m *TopicMetaInfo) GetIsMember() bool {
	if m != nil {
		return m.IsMember
	}
	return false
}

func (m *TopicMetaInfo) GetMemberRole() string {
	if m != nil {
		return m.MemberRole
	}
	return ""
}

type TopicPermissionInfo struct {
	EditPermission       string   `protobuf:"bytes,1,opt,name=EditPermission,proto3" json:"edit_permission"`
	IsMember             bool     `protobuf:"varint,2,opt,name=IsMember,proto3" json:"is_member"`
	MemberRole           string   `protobuf:"bytes,3,opt,name=MemberRole,proto3" json:"member_role"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicPermissionInfo) Reset()         { *m = TopicPermissionInfo{} }
func (m *TopicPermissionInfo) String() string { return proto.CompactTextString(m) }
func (*TopicPermissionInfo) ProtoMessage()    {}
func (*TopicPermissionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{4}
}
func (m *TopicPermissionInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicPermissionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicPermissionInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicPermissionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicPermissionInfo.Merge(m, src)
}
func (m *TopicPermissionInfo) XXX_Size() int {
	return m.Size()
}
func (m *TopicPermissionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicPermissionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_TopicPermissionInfo proto.InternalMessageInfo

func (m *TopicPermissionInfo) GetEditPermission() string {
	if m != nil {
		return m.EditPermission
	}
	return ""
}

func (m *TopicPermissionInfo) GetIsMember() bool {
	if m != nil {
		return m.IsMember
	}
	return false
}

func (m *TopicPermissionInfo) GetMemberRole() string {
	if m != nil {
		return m.MemberRole
	}
	return ""
}

type TopicReq struct {
	ID                   int64    `protobuf:"varint,1,opt,name=ID,proto3" json:"id"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicReq) Reset()         { *m = TopicReq{} }
func (m *TopicReq) String() string { return proto.CompactTextString(m) }
func (*TopicReq) ProtoMessage()    {}
func (*TopicReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{5}
}
func (m *TopicReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicReq.Merge(m, src)
}
func (m *TopicReq) XXX_Size() int {
	return m.Size()
}
func (m *TopicReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicReq.DiscardUnknown(m)
}

var xxx_messageInfo_TopicReq proto.InternalMessageInfo

func (m *TopicReq) GetID() int64 {
	if m != nil {
		return m.ID
	}
	return 0
}

type TopicMetaReq struct {
	TopicID              int64    `protobuf:"varint,1,opt,name=TopicID,proto3" json:"topic_id"`
	AccountID            int64    `protobuf:"varint,2,opt,name=AccountID,proto3" json:"aid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicMetaReq) Reset()         { *m = TopicMetaReq{} }
func (m *TopicMetaReq) String() string { return proto.CompactTextString(m) }
func (*TopicMetaReq) ProtoMessage()    {}
func (*TopicMetaReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{6}
}
func (m *TopicMetaReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicMetaReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicMetaReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicMetaReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicMetaReq.Merge(m, src)
}
func (m *TopicMetaReq) XXX_Size() int {
	return m.Size()
}
func (m *TopicMetaReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicMetaReq.DiscardUnknown(m)
}

var xxx_messageInfo_TopicMetaReq proto.InternalMessageInfo

func (m *TopicMetaReq) GetTopicID() int64 {
	if m != nil {
		return m.TopicID
	}
	return 0
}

func (m *TopicMetaReq) GetAccountID() int64 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

type TopicMemberRoleReq struct {
	TopicID              int64    `protobuf:"varint,1,opt,name=TopicID,proto3" json:"topic_id"`
	AccountID            int64    `protobuf:"varint,2,opt,name=AccountID,proto3" json:"aid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicMemberRoleReq) Reset()         { *m = TopicMemberRoleReq{} }
func (m *TopicMemberRoleReq) String() string { return proto.CompactTextString(m) }
func (*TopicMemberRoleReq) ProtoMessage()    {}
func (*TopicMemberRoleReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{7}
}
func (m *TopicMemberRoleReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicMemberRoleReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicMemberRoleReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicMemberRoleReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicMemberRoleReq.Merge(m, src)
}
func (m *TopicMemberRoleReq) XXX_Size() int {
	return m.Size()
}
func (m *TopicMemberRoleReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicMemberRoleReq.DiscardUnknown(m)
}

var xxx_messageInfo_TopicMemberRoleReq proto.InternalMessageInfo

func (m *TopicMemberRoleReq) GetTopicID() int64 {
	if m != nil {
		return m.TopicID
	}
	return 0
}

func (m *TopicMemberRoleReq) GetAccountID() int64 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

type TopicPermissionReq struct {
	TopicID              int64    `protobuf:"varint,1,opt,name=TopicID,proto3" json:"topic_id"`
	AccountID            int64    `protobuf:"varint,2,opt,name=AccountID,proto3" json:"aid"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TopicPermissionReq) Reset()         { *m = TopicPermissionReq{} }
func (m *TopicPermissionReq) String() string { return proto.CompactTextString(m) }
func (*TopicPermissionReq) ProtoMessage()    {}
func (*TopicPermissionReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{8}
}
func (m *TopicPermissionReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TopicPermissionReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TopicPermissionReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TopicPermissionReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TopicPermissionReq.Merge(m, src)
}
func (m *TopicPermissionReq) XXX_Size() int {
	return m.Size()
}
func (m *TopicPermissionReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TopicPermissionReq.DiscardUnknown(m)
}

var xxx_messageInfo_TopicPermissionReq proto.InternalMessageInfo

func (m *TopicPermissionReq) GetTopicID() int64 {
	if m != nil {
		return m.TopicID
	}
	return 0
}

func (m *TopicPermissionReq) GetAccountID() int64 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

type UserTopicsReq struct {
	AccountID            int64    `protobuf:"varint,1,opt,name=AccountID,proto3" json:"aid"`
	Limit                int32    `protobuf:"varint,2,opt,name=Limit,proto3" json:"limit"`
	Offset               int32    `protobuf:"varint,3,opt,name=Offset,proto3" json:"offset"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserTopicsReq) Reset()         { *m = UserTopicsReq{} }
func (m *UserTopicsReq) String() string { return proto.CompactTextString(m) }
func (*UserTopicsReq) ProtoMessage()    {}
func (*UserTopicsReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{9}
}
func (m *UserTopicsReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserTopicsReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserTopicsReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserTopicsReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserTopicsReq.Merge(m, src)
}
func (m *UserTopicsReq) XXX_Size() int {
	return m.Size()
}
func (m *UserTopicsReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UserTopicsReq.DiscardUnknown(m)
}

var xxx_messageInfo_UserTopicsReq proto.InternalMessageInfo

func (m *UserTopicsReq) GetAccountID() int64 {
	if m != nil {
		return m.AccountID
	}
	return 0
}

func (m *UserTopicsReq) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *UserTopicsReq) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type UserTopicsResp struct {
	Items                []*TopicInfo `protobuf:"bytes,1,rep,name=Items,proto3" json:"items"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserTopicsResp) Reset()         { *m = UserTopicsResp{} }
func (m *UserTopicsResp) String() string { return proto.CompactTextString(m) }
func (*UserTopicsResp) ProtoMessage()    {}
func (*UserTopicsResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f80abaa17e25ccc8, []int{10}
}
func (m *UserTopicsResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserTopicsResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserTopicsResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserTopicsResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserTopicsResp.Merge(m, src)
}
func (m *UserTopicsResp) XXX_Size() int {
	return m.Size()
}
func (m *UserTopicsResp) XXX_DiscardUnknown() {
	xxx_messageInfo_UserTopicsResp.DiscardUnknown(m)
}

var xxx_messageInfo_UserTopicsResp proto.InternalMessageInfo

func (m *UserTopicsResp) GetItems() []*TopicInfo {
	if m != nil {
		return m.Items
	}
	return nil
}

func init() {
	proto.RegisterType((*EmptyStruct)(nil), "service.topic.EmptyStruct")
	proto.RegisterType((*MemberRoleReply)(nil), "service.topic.MemberRoleReply")
	proto.RegisterType((*TopicInfo)(nil), "service.topic.TopicInfo")
	proto.RegisterType((*TopicMetaInfo)(nil), "service.topic.TopicMetaInfo")
	proto.RegisterType((*TopicPermissionInfo)(nil), "service.topic.TopicPermissionInfo")
	proto.RegisterType((*TopicReq)(nil), "service.topic.TopicReq")
	proto.RegisterType((*TopicMetaReq)(nil), "service.topic.TopicMetaReq")
	proto.RegisterType((*TopicMemberRoleReq)(nil), "service.topic.TopicMemberRoleReq")
	proto.RegisterType((*TopicPermissionReq)(nil), "service.topic.TopicPermissionReq")
	proto.RegisterType((*UserTopicsReq)(nil), "service.topic.UserTopicsReq")
	proto.RegisterType((*UserTopicsResp)(nil), "service.topic.UserTopicsResp")
}

func init() { proto.RegisterFile("pb.proto", fileDescriptor_f80abaa17e25ccc8) }

var fileDescriptor_f80abaa17e25ccc8 = []byte{
	// 1002 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x96, 0xdd, 0x6e, 0xe3, 0x44,
	0x14, 0xc7, 0x71, 0xd2, 0xa4, 0xc9, 0x49, 0xd2, 0x6e, 0x67, 0x05, 0x98, 0xb0, 0xd4, 0xc5, 0x12,
	0xab, 0x22, 0x41, 0x2a, 0x15, 0xb8, 0x40, 0x5c, 0xa0, 0xba, 0xdd, 0xa5, 0x01, 0x16, 0xca, 0xec,
	0x07, 0xd2, 0x22, 0x64, 0x4d, 0xec, 0x49, 0x3a, 0x28, 0xfe, 0x58, 0x7b, 0x92, 0x2a, 0xe2, 0x5d,
	0x78, 0x04, 0x5e, 0x80, 0x17, 0xe0, 0x12, 0xf1, 0x00, 0x16, 0xea, 0xa5, 0x9f, 0x02, 0xcd, 0x99,
	0x24, 0xb6, 0xbb, 0x6d, 0x61, 0x2f, 0xf6, 0x2e, 0x3e, 0xe7, 0xf7, 0x3f, 0x73, 0x66, 0xce, 0x39,
	0x33, 0x81, 0x56, 0x3c, 0x1a, 0xc4, 0x49, 0x24, 0x23, 0xd2, 0x4b, 0x79, 0x32, 0x17, 0x1e, 0x1f,
	0xc8, 0x28, 0x16, 0x5e, 0xff, 0xe3, 0x89, 0x90, 0xe7, 0xb3, 0xd1, 0xc0, 0x8b, 0x82, 0x83, 0x49,
	0x34, 0x89, 0x0e, 0x90, 0x1a, 0xcd, 0xc6, 0xf8, 0x85, 0x1f, 0xf8, 0x4b, 0xab, 0xed, 0x1e, 0x74,
	0x1e, 0x04, 0xb1, 0x5c, 0x3c, 0x96, 0xc9, 0xcc, 0x93, 0xf6, 0x73, 0xd8, 0x7e, 0xc4, 0x83, 0x11,
	0x4f, 0x68, 0x34, 0xe5, 0x94, 0xc7, 0xd3, 0x05, 0xf9, 0x10, 0x5a, 0xc3, 0x54, 0x1b, 0x4d, 0x63,
	0xcf, 0xd8, 0x6f, 0x39, 0xbd, 0x3c, 0xb3, 0xda, 0x22, 0x75, 0x03, 0x4d, 0xae, 0xdd, 0xe4, 0x1e,
	0x6c, 0x28, 0x9d, 0x59, 0xdb, 0x33, 0xf6, 0xdb, 0x4e, 0x2b, 0xcf, 0xac, 0x8d, 0x44, 0xc5, 0x41,
	0xab, 0xfd, 0x77, 0x13, 0xda, 0x4f, 0x54, 0x8e, 0xc3, 0x70, 0x1c, 0x91, 0xb7, 0xa0, 0x36, 0x3c,
	0xc1, 0x80, 0x75, 0xa7, 0x99, 0x67, 0x56, 0x4d, 0xf8, 0xb4, 0x36, 0x3c, 0x51, 0x31, 0xbe, 0x63,
	0x41, 0x25, 0x46, 0xc8, 0x02, 0x4e, 0xd1, 0x4a, 0x06, 0xd0, 0x39, 0x9a, 0x33, 0xc9, 0x92, 0x67,
	0x6c, 0x3a, 0xe3, 0x66, 0x1d, 0x21, 0xc8, 0x33, 0xab, 0xc9, 0xd0, 0x7c, 0xfa, 0x06, 0x2d, 0x03,
	0xc4, 0x86, 0x4d, 0x67, 0xa2, 0xd9, 0x0d, 0x64, 0x71, 0xa9, 0xd1, 0xe4, 0xd4, 0xa0, 0x2b, 0x07,
	0xf9, 0x14, 0xba, 0xc3, 0x50, 0x26, 0x91, 0x3f, 0xf3, 0xa4, 0x88, 0x42, 0xb3, 0x81, 0xe0, 0x9d,
	0x3c, 0xb3, 0xba, 0xa2, 0x64, 0xa7, 0x15, 0x8a, 0x7c, 0x06, 0xdd, 0xa3, 0xe9, 0x34, 0xba, 0x38,
	0x11, 0xa9, 0x37, 0x4b, 0x53, 0xb3, 0x89, 0x47, 0xb3, 0x93, 0x67, 0x56, 0x8f, 0x29, 0xbb, 0xeb,
	0x6b, 0x07, 0xad, 0x60, 0xe4, 0x23, 0x68, 0xe3, 0xf7, 0xf1, 0x39, 0x93, 0xe6, 0x26, 0x6a, 0xb6,
	0xf2, 0xcc, 0x02, 0xad, 0xf1, 0xce, 0x99, 0xa4, 0x05, 0xa0, 0xe8, 0x61, 0x7a, 0x96, 0x88, 0x39,
	0x93, 0xdc, 0x6c, 0x15, 0xb4, 0x48, 0xdd, 0x58, 0x5b, 0x69, 0x01, 0x90, 0x2f, 0x60, 0xeb, 0x99,
	0xe0, 0x17, 0x67, 0x3c, 0x09, 0x44, 0x9a, 0xaa, 0xad, 0xb4, 0x71, 0x2b, 0x77, 0xf3, 0xcc, 0xda,
	0x9e, 0x0b, 0x7e, 0xe1, 0xc6, 0x6b, 0x17, 0xbd, 0x82, 0x2a, 0xf1, 0x03, 0x5f, 0xc8, 0x92, 0x18,
	0x0a, 0x31, 0xf7, 0x85, 0xac, 0x88, 0xab, 0xa8, 0x12, 0x7f, 0x1d, 0x89, 0xb0, 0x24, 0xee, 0x14,
	0xe2, 0x5f, 0x22, 0x11, 0x56, 0xc4, 0x55, 0x94, 0x7c, 0x09, 0xdb, 0xc7, 0x4c, 0xb2, 0x69, 0x34,
	0x51, 0x29, 0x3d, 0x59, 0xc4, 0xdc, 0xec, 0xa2, 0xfa, 0xcd, 0x3c, 0xb3, 0x76, 0x3c, 0xed, 0x72,
	0x31, 0x7f, 0xb9, 0x88, 0x39, 0xbd, 0x4a, 0xab, 0x53, 0xc2, 0xbe, 0x3a, 0x8d, 0x02, 0x6e, 0xf6,
	0x50, 0x8a, 0xa7, 0x84, 0x03, 0xe1, 0x9e, 0x47, 0x01, 0xa7, 0x05, 0xa0, 0xe8, 0xe3, 0x84, 0x33,
	0xc9, 0x7d, 0x67, 0x61, 0x6e, 0x61, 0xff, 0x21, 0xed, 0x69, 0xa3, 0x3b, 0x5a, 0xd0, 0x02, 0x28,
	0xd1, 0x47, 0xd2, 0xdc, 0x7e, 0x99, 0x56, 0xf5, 0x5a, 0x03, 0x8a, 0x7e, 0x1a, 0xfb, 0x4b, 0xfa,
	0x4e, 0x41, 0xcf, 0xb4, 0x11, 0xe9, 0x35, 0x40, 0x0e, 0xa1, 0xa3, 0x07, 0xe7, 0x38, 0x9a, 0x85,
	0xd2, 0xdc, 0xd9, 0x33, 0xf6, 0x1b, 0xba, 0xef, 0xf4, 0x64, 0xb9, 0x9e, 0xb2, 0xd3, 0x32, 0xe4,
	0xb4, 0xa0, 0xa9, 0xfb, 0xdb, 0xd9, 0x80, 0x9a, 0x33, 0xb1, 0xff, 0xa8, 0x41, 0x0f, 0xf7, 0xf6,
	0x88, 0x4b, 0x86, 0x83, 0xa5, 0x32, 0x66, 0xe1, 0xc3, 0x48, 0x35, 0xd1, 0x72, 0x60, 0x75, 0xc6,
	0x2c, 0x74, 0xc7, 0x68, 0xa5, 0x05, 0x40, 0xee, 0xc3, 0xe6, 0x31, 0x0b, 0x55, 0x39, 0x71, 0xe2,
	0x5a, 0x4e, 0x37, 0xcf, 0xac, 0x96, 0x62, 0x55, 0xcd, 0xe9, 0xca, 0x49, 0xde, 0x81, 0xfa, 0x43,
	0x36, 0xc7, 0x81, 0x6b, 0x39, 0x9b, 0x79, 0x66, 0xd5, 0xc7, 0x6c, 0x4e, 0x95, 0x6d, 0x19, 0x42,
	0x55, 0x03, 0x67, 0xac, 0x14, 0x42, 0xd5, 0x8c, 0xae, 0x9c, 0x6a, 0x62, 0xf4, 0xa2, 0x8f, 0x25,
	0x93, 0xb3, 0x14, 0xe7, 0xac, 0xa1, 0x27, 0x46, 0xe7, 0xe5, 0xa6, 0xe8, 0xa0, 0x15, 0xac, 0x72,
	0xff, 0x34, 0x6f, 0xbf, 0x7f, 0x0e, 0x00, 0x8a, 0xdb, 0x0b, 0xa7, 0xab, 0xed, 0x6c, 0xe7, 0x99,
	0xd5, 0x59, 0x9e, 0x27, 0x5e, 0x46, 0x25, 0xc4, 0xfe, 0xdd, 0x80, 0xbb, 0x78, 0x7a, 0x45, 0x3b,
	0xe2, 0x19, 0xbe, 0x3c, 0x0c, 0xc6, 0xff, 0x1f, 0x86, 0x72, 0xc2, 0xb5, 0x57, 0x49, 0xb8, 0xfe,
	0xdf, 0x09, 0xdb, 0xd0, 0xc2, 0x7c, 0x29, 0x7f, 0x71, 0xd3, 0x0d, 0x6a, 0xff, 0x0c, 0xdd, 0x75,
	0x47, 0x28, 0xee, 0x3e, 0x6c, 0xea, 0x6b, 0x77, 0x05, 0x63, 0x7d, 0xf4, 0x70, 0x08, 0x9f, 0xae,
	0x9c, 0xe4, 0x03, 0x68, 0x1f, 0x79, 0xd8, 0x72, 0xc3, 0x13, 0x4c, 0xbc, 0xae, 0x0b, 0xcd, 0x84,
	0x4f, 0x0b, 0x8f, 0xed, 0x01, 0x59, 0x86, 0x2f, 0xde, 0x89, 0xd7, 0xb6, 0x48, 0x71, 0xac, 0xaf,
	0x61, 0x91, 0x5f, 0xa1, 0xf7, 0x34, 0xe5, 0x09, 0xaa, 0x52, 0x15, 0xbf, 0xa2, 0x33, 0x6e, 0xd2,
	0x11, 0x0b, 0x1a, 0xdf, 0x8a, 0x60, 0x39, 0x31, 0x0d, 0xa7, 0x9d, 0x67, 0x56, 0x63, 0xaa, 0x0c,
	0x54, 0xdb, 0x89, 0x0d, 0xcd, 0xef, 0xc7, 0xe3, 0x94, 0x4b, 0x2c, 0x69, 0x43, 0x3f, 0x50, 0x11,
	0x5a, 0xe8, 0xd2, 0x63, 0x7f, 0x03, 0x5b, 0xe5, 0xc5, 0xd3, 0x98, 0x7c, 0x0e, 0x8d, 0xa1, 0xe4,
	0x41, 0x6a, 0x1a, 0x7b, 0xf5, 0xfd, 0xce, 0xa1, 0x39, 0xa8, 0x3c, 0xec, 0x83, 0xf5, 0xd3, 0xa9,
	0x17, 0x14, 0x0a, 0xa5, 0x5a, 0x71, 0xf8, 0x5b, 0x1d, 0x1a, 0xe8, 0x27, 0x47, 0xd0, 0xfd, 0x8a,
	0xcb, 0xe2, 0x99, 0x7d, 0xfb, 0xba, 0x28, 0x94, 0xbf, 0xe8, 0xdf, 0x18, 0x9e, 0xfc, 0x04, 0x64,
	0x15, 0xa2, 0xd4, 0xd5, 0xef, 0x5f, 0xc7, 0x57, 0xca, 0xd3, 0xb7, 0x6f, 0x47, 0x30, 0xf8, 0x8f,
	0x45, 0xf0, 0xa2, 0x81, 0xae, 0x0f, 0x5e, 0x69, 0xb0, 0xfe, 0xee, 0x15, 0xe4, 0xea, 0xdf, 0x94,
	0x61, 0xb1, 0x71, 0xd5, 0xf8, 0xe4, 0xdd, 0xeb, 0x43, 0xe2, 0x48, 0xf4, 0xef, 0xdd, 0xe4, 0xc4,
	0x1c, 0x7f, 0xc0, 0x1c, 0x8b, 0xea, 0x9c, 0xb1, 0x09, 0xf7, 0xc9, 0x55, 0x4d, 0xa5, 0x75, 0xfa,
	0xef, 0xdd, 0xe2, 0x4d, 0x63, 0x67, 0xe7, 0xcf, 0xcb, 0x5d, 0xe3, 0xaf, 0xcb, 0x5d, 0xe3, 0x9f,
	0xcb, 0x5d, 0xe3, 0x79, 0x9d, 0xc5, 0x62, 0xd4, 0xc4, 0x3f, 0x60, 0x9f, 0xfc, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x94, 0xd9, 0x79, 0xa3, 0xca, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TopicClient is the client API for Topic service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TopicClient interface {
	GetTopicInfo(ctx context.Context, in *TopicReq, opts ...grpc.CallOption) (*TopicInfo, error)
	GetTopicPermission(ctx context.Context, in *TopicPermissionReq, opts ...grpc.CallOption) (*TopicPermissionInfo, error)
	GetTopicMemberRole(ctx context.Context, in *TopicMemberRoleReq, opts ...grpc.CallOption) (*MemberRoleReply, error)
	GetTopicMeta(ctx context.Context, in *TopicMetaReq, opts ...grpc.CallOption) (*TopicMetaInfo, error)
	GetUserTopicsPaged(ctx context.Context, in *UserTopicsReq, opts ...grpc.CallOption) (*UserTopicsResp, error)
}

type topicClient struct {
	cc *grpc.ClientConn
}

func NewTopicClient(cc *grpc.ClientConn) TopicClient {
	return &topicClient{cc}
}

func (c *topicClient) GetTopicInfo(ctx context.Context, in *TopicReq, opts ...grpc.CallOption) (*TopicInfo, error) {
	out := new(TopicInfo)
	err := c.cc.Invoke(ctx, "/service.topic.Topic/GetTopicInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicClient) GetTopicPermission(ctx context.Context, in *TopicPermissionReq, opts ...grpc.CallOption) (*TopicPermissionInfo, error) {
	out := new(TopicPermissionInfo)
	err := c.cc.Invoke(ctx, "/service.topic.Topic/GetTopicPermission", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicClient) GetTopicMemberRole(ctx context.Context, in *TopicMemberRoleReq, opts ...grpc.CallOption) (*MemberRoleReply, error) {
	out := new(MemberRoleReply)
	err := c.cc.Invoke(ctx, "/service.topic.Topic/GetTopicMemberRole", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicClient) GetTopicMeta(ctx context.Context, in *TopicMetaReq, opts ...grpc.CallOption) (*TopicMetaInfo, error) {
	out := new(TopicMetaInfo)
	err := c.cc.Invoke(ctx, "/service.topic.Topic/GetTopicMeta", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *topicClient) GetUserTopicsPaged(ctx context.Context, in *UserTopicsReq, opts ...grpc.CallOption) (*UserTopicsResp, error) {
	out := new(UserTopicsResp)
	err := c.cc.Invoke(ctx, "/service.topic.Topic/GetUserTopicsPaged", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TopicServer is the server API for Topic service.
type TopicServer interface {
	GetTopicInfo(context.Context, *TopicReq) (*TopicInfo, error)
	GetTopicPermission(context.Context, *TopicPermissionReq) (*TopicPermissionInfo, error)
	GetTopicMemberRole(context.Context, *TopicMemberRoleReq) (*MemberRoleReply, error)
	GetTopicMeta(context.Context, *TopicMetaReq) (*TopicMetaInfo, error)
	GetUserTopicsPaged(context.Context, *UserTopicsReq) (*UserTopicsResp, error)
}

// UnimplementedTopicServer can be embedded to have forward compatible implementations.
type UnimplementedTopicServer struct {
}

func (*UnimplementedTopicServer) GetTopicInfo(ctx context.Context, req *TopicReq) (*TopicInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopicInfo not implemented")
}
func (*UnimplementedTopicServer) GetTopicPermission(ctx context.Context, req *TopicPermissionReq) (*TopicPermissionInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopicPermission not implemented")
}
func (*UnimplementedTopicServer) GetTopicMemberRole(ctx context.Context, req *TopicMemberRoleReq) (*MemberRoleReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopicMemberRole not implemented")
}
func (*UnimplementedTopicServer) GetTopicMeta(ctx context.Context, req *TopicMetaReq) (*TopicMetaInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetTopicMeta not implemented")
}
func (*UnimplementedTopicServer) GetUserTopicsPaged(ctx context.Context, req *UserTopicsReq) (*UserTopicsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserTopicsPaged not implemented")
}

func RegisterTopicServer(s *grpc.Server, srv TopicServer) {
	s.RegisterService(&_Topic_serviceDesc, srv)
}

func _Topic_GetTopicInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServer).GetTopicInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.topic.Topic/GetTopicInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServer).GetTopicInfo(ctx, req.(*TopicReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Topic_GetTopicPermission_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicPermissionReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServer).GetTopicPermission(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.topic.Topic/GetTopicPermission",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServer).GetTopicPermission(ctx, req.(*TopicPermissionReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Topic_GetTopicMemberRole_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicMemberRoleReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServer).GetTopicMemberRole(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.topic.Topic/GetTopicMemberRole",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServer).GetTopicMemberRole(ctx, req.(*TopicMemberRoleReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Topic_GetTopicMeta_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TopicMetaReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServer).GetTopicMeta(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.topic.Topic/GetTopicMeta",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServer).GetTopicMeta(ctx, req.(*TopicMetaReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Topic_GetUserTopicsPaged_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserTopicsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopicServer).GetUserTopicsPaged(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/service.topic.Topic/GetUserTopicsPaged",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopicServer).GetUserTopicsPaged(ctx, req.(*UserTopicsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Topic_serviceDesc = grpc.ServiceDesc{
	ServiceName: "service.topic.Topic",
	HandlerType: (*TopicServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTopicInfo",
			Handler:    _Topic_GetTopicInfo_Handler,
		},
		{
			MethodName: "GetTopicPermission",
			Handler:    _Topic_GetTopicPermission_Handler,
		},
		{
			MethodName: "GetTopicMemberRole",
			Handler:    _Topic_GetTopicMemberRole_Handler,
		},
		{
			MethodName: "GetTopicMeta",
			Handler:    _Topic_GetTopicMeta_Handler,
		},
		{
			MethodName: "GetUserTopicsPaged",
			Handler:    _Topic_GetUserTopicsPaged_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb.proto",
}

func (m *EmptyStruct) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *EmptyStruct) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *EmptyStruct) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func (m *MemberRoleReply) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MemberRoleReply) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MemberRoleReply) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintPb(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0x12
	}
	if m.IsMember {
		i--
		if m.IsMember {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.MemberCount != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.MemberCount))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.UpdatedAt != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.UpdatedAt))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.CreatedAt != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.CreatedAt))
		i--
		dAtA[i] = 0x78
	}
	if m.CreatedBy != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.CreatedBy))
		i--
		dAtA[i] = 0x70
	}
	if len(m.TopicHome) > 0 {
		i -= len(m.TopicHome)
		copy(dAtA[i:], m.TopicHome)
		i = encodeVarintPb(dAtA, i, uint64(len(m.TopicHome)))
		i--
		dAtA[i] = 0x6a
	}
	if len(m.CatalogViewType) > 0 {
		i -= len(m.CatalogViewType)
		copy(dAtA[i:], m.CatalogViewType)
		i = encodeVarintPb(dAtA, i, uint64(len(m.CatalogViewType)))
		i--
		dAtA[i] = 0x62
	}
	if len(m.JoinPermission) > 0 {
		i -= len(m.JoinPermission)
		copy(dAtA[i:], m.JoinPermission)
		i = encodeVarintPb(dAtA, i, uint64(len(m.JoinPermission)))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.EditPermission) > 0 {
		i -= len(m.EditPermission)
		copy(dAtA[i:], m.EditPermission)
		i = encodeVarintPb(dAtA, i, uint64(len(m.EditPermission)))
		i--
		dAtA[i] = 0x52
	}
	if len(m.ViewPermission) > 0 {
		i -= len(m.ViewPermission)
		copy(dAtA[i:], m.ViewPermission)
		i = encodeVarintPb(dAtA, i, uint64(len(m.ViewPermission)))
		i--
		dAtA[i] = 0x4a
	}
	if m.IsPrivate {
		i--
		if m.IsPrivate {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if m.AllowChat {
		i--
		if m.AllowChat {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.AllowDiscuss {
		i--
		if m.AllowDiscuss {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if len(m.Introduction) > 0 {
		i -= len(m.Introduction)
		copy(dAtA[i:], m.Introduction)
		i = encodeVarintPb(dAtA, i, uint64(len(m.Introduction)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Bg != nil {
		{
			size := m.Bg.Size()
			i -= size
			if _, err := m.Bg.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if m.Avatar != nil {
		{
			size := m.Avatar.Size()
			i -= size
			if _, err := m.Avatar.MarshalTo(dAtA[i:]); err != nil {
				return 0, err
			}
		}
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPb(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if m.ID != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicInfo_AvatarValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicInfo_AvatarValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.AvatarValue)
	copy(dAtA[i:], m.AvatarValue)
	i = encodeVarintPb(dAtA, i, uint64(len(m.AvatarValue)))
	i--
	dAtA[i] = 0x1a
	return len(dAtA) - i, nil
}
func (m *TopicInfo_BgValue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicInfo_BgValue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	i -= len(m.BgValue)
	copy(dAtA[i:], m.BgValue)
	i = encodeVarintPb(dAtA, i, uint64(len(m.BgValue)))
	i--
	dAtA[i] = 0x22
	return len(dAtA) - i, nil
}
func (m *TopicMetaInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicMetaInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicMetaInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MemberRole) > 0 {
		i -= len(m.MemberRole)
		copy(dAtA[i:], m.MemberRole)
		i = encodeVarintPb(dAtA, i, uint64(len(m.MemberRole)))
		i--
		dAtA[i] = 0x3a
	}
	if m.IsMember {
		i--
		if m.IsMember {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.FollowStatus != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.FollowStatus))
		i--
		dAtA[i] = 0x28
	}
	if m.CanView {
		i--
		if m.CanView {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x20
	}
	if m.Fav {
		i--
		if m.Fav {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if m.CanEdit {
		i--
		if m.CanEdit {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if m.CanFollow {
		i--
		if m.CanFollow {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicPermissionInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicPermissionInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicPermissionInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.MemberRole) > 0 {
		i -= len(m.MemberRole)
		copy(dAtA[i:], m.MemberRole)
		i = encodeVarintPb(dAtA, i, uint64(len(m.MemberRole)))
		i--
		dAtA[i] = 0x1a
	}
	if m.IsMember {
		i--
		if m.IsMember {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x10
	}
	if len(m.EditPermission) > 0 {
		i -= len(m.EditPermission)
		copy(dAtA[i:], m.EditPermission)
		i = encodeVarintPb(dAtA, i, uint64(len(m.EditPermission)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TopicReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ID != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.ID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicMetaReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicMetaReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicMetaReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AccountID != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.AccountID))
		i--
		dAtA[i] = 0x10
	}
	if m.TopicID != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.TopicID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicMemberRoleReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicMemberRoleReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicMemberRoleReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AccountID != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.AccountID))
		i--
		dAtA[i] = 0x10
	}
	if m.TopicID != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.TopicID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *TopicPermissionReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TopicPermissionReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TopicPermissionReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.AccountID != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.AccountID))
		i--
		dAtA[i] = 0x10
	}
	if m.TopicID != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.TopicID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserTopicsReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserTopicsReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserTopicsReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Offset != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.Offset))
		i--
		dAtA[i] = 0x18
	}
	if m.Limit != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.Limit))
		i--
		dAtA[i] = 0x10
	}
	if m.AccountID != 0 {
		i = encodeVarintPb(dAtA, i, uint64(m.AccountID))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *UserTopicsResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserTopicsResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserTopicsResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Items) > 0 {
		for iNdEx := len(m.Items) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Items[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPb(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintPb(dAtA []byte, offset int, v uint64) int {
	offset -= sovPb(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *EmptyStruct) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *MemberRoleReply) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.IsMember {
		n += 2
	}
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovPb(uint64(m.ID))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	if m.Avatar != nil {
		n += m.Avatar.Size()
	}
	if m.Bg != nil {
		n += m.Bg.Size()
	}
	l = len(m.Introduction)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	if m.AllowDiscuss {
		n += 2
	}
	if m.AllowChat {
		n += 2
	}
	if m.IsPrivate {
		n += 2
	}
	l = len(m.ViewPermission)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	l = len(m.EditPermission)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	l = len(m.JoinPermission)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	l = len(m.CatalogViewType)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	l = len(m.TopicHome)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	if m.CreatedBy != 0 {
		n += 1 + sovPb(uint64(m.CreatedBy))
	}
	if m.CreatedAt != 0 {
		n += 1 + sovPb(uint64(m.CreatedAt))
	}
	if m.UpdatedAt != 0 {
		n += 2 + sovPb(uint64(m.UpdatedAt))
	}
	if m.MemberCount != 0 {
		n += 2 + sovPb(uint64(m.MemberCount))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicInfo_AvatarValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.AvatarValue)
	n += 1 + l + sovPb(uint64(l))
	return n
}
func (m *TopicInfo_BgValue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.BgValue)
	n += 1 + l + sovPb(uint64(l))
	return n
}
func (m *TopicMetaInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.CanFollow {
		n += 2
	}
	if m.CanEdit {
		n += 2
	}
	if m.Fav {
		n += 2
	}
	if m.CanView {
		n += 2
	}
	if m.FollowStatus != 0 {
		n += 1 + sovPb(uint64(m.FollowStatus))
	}
	if m.IsMember {
		n += 2
	}
	l = len(m.MemberRole)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicPermissionInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EditPermission)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	if m.IsMember {
		n += 2
	}
	l = len(m.MemberRole)
	if l > 0 {
		n += 1 + l + sovPb(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ID != 0 {
		n += 1 + sovPb(uint64(m.ID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicMetaReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopicID != 0 {
		n += 1 + sovPb(uint64(m.TopicID))
	}
	if m.AccountID != 0 {
		n += 1 + sovPb(uint64(m.AccountID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicMemberRoleReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopicID != 0 {
		n += 1 + sovPb(uint64(m.TopicID))
	}
	if m.AccountID != 0 {
		n += 1 + sovPb(uint64(m.AccountID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TopicPermissionReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TopicID != 0 {
		n += 1 + sovPb(uint64(m.TopicID))
	}
	if m.AccountID != 0 {
		n += 1 + sovPb(uint64(m.AccountID))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserTopicsReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AccountID != 0 {
		n += 1 + sovPb(uint64(m.AccountID))
	}
	if m.Limit != 0 {
		n += 1 + sovPb(uint64(m.Limit))
	}
	if m.Offset != 0 {
		n += 1 + sovPb(uint64(m.Offset))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *UserTopicsResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Items) > 0 {
		for _, e := range m.Items {
			l = e.Size()
			n += 1 + l + sovPb(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPb(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPb(x uint64) (n int) {
	return sovPb(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *EmptyStruct) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: EmptyStruct: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: EmptyStruct: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MemberRoleReply) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MemberRoleReply: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MemberRoleReply: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMember", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsMember = bool(v != 0)
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = &TopicInfo_AvatarValue{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BgValue", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bg = &TopicInfo_BgValue{string(dAtA[iNdEx:postIndex])}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Introduction", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Introduction = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowDiscuss", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowDiscuss = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowChat", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowChat = bool(v != 0)
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsPrivate", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsPrivate = bool(v != 0)
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewPermission", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ViewPermission = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditPermission", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EditPermission = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field JoinPermission", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.JoinPermission = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 12:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CatalogViewType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CatalogViewType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 13:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicHome", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TopicHome = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedBy", wireType)
			}
			m.CreatedBy = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedBy |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatedAt", wireType)
			}
			m.CreatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdatedAt", wireType)
			}
			m.UpdatedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdatedAt |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemberCount", wireType)
			}
			m.MemberCount = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.MemberCount |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicMetaInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicMetaInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicMetaInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanFollow", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanFollow = bool(v != 0)
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanEdit", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanEdit = bool(v != 0)
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Fav", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Fav = bool(v != 0)
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CanView", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.CanView = bool(v != 0)
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowStatus", wireType)
			}
			m.FollowStatus = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FollowStatus |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMember", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsMember = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemberRole", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MemberRole = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicPermissionInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicPermissionInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicPermissionInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EditPermission", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EditPermission = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsMember", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsMember = bool(v != 0)
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MemberRole", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MemberRole = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ID", wireType)
			}
			m.ID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicMetaReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicMetaReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicMetaReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicID", wireType)
			}
			m.TopicID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountID", wireType)
			}
			m.AccountID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicMemberRoleReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicMemberRoleReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicMemberRoleReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicID", wireType)
			}
			m.TopicID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountID", wireType)
			}
			m.AccountID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TopicPermissionReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: TopicPermissionReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: TopicPermissionReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TopicID", wireType)
			}
			m.TopicID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TopicID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountID", wireType)
			}
			m.AccountID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserTopicsReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserTopicsReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserTopicsReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AccountID", wireType)
			}
			m.AccountID = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AccountID |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Limit", wireType)
			}
			m.Limit = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Limit |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Offset", wireType)
			}
			m.Offset = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Offset |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *UserTopicsResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: UserTopicsResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: UserTopicsResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Items", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPb
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Items = append(m.Items, &TopicInfo{})
			if err := m.Items[len(m.Items)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthPb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPb(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPb
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPb
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthPb
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowPb
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipPb(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthPb
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthPb = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPb   = fmt.Errorf("proto: integer overflow")
)
