syntax = "proto3";
package service.comment;
option go_package = "api";


import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// EmptyStruct 空的message，对应真实service只返回error，没有具体返回值
message EmptyStruct {
}

message Creator {
    int64 ID = 1 [(gogoproto.jsontag) = "id"];

    string  UserName = 2 [(gogoproto.jsontag) = "user_name"];

    string Avatar   = 3 [(gogoproto.jsontag) = "avatar"];

    string  Introduction = 4 [(gogoproto.jsontag) = "introduction"] ;
}

message CommentInfo {
    int64 ID = 1;

    string  Content = 2;

    string  TargetType = 3;

    int64 OwnerID = 4;

    int64 ResourceID = 5;

    bool Featured = 6;

    bool Deleted = 7;

    Creator  Creator  = 8;

    int64 CreatedAt = 9;

    CommentStat  Stat = 11;

    Creator  ReplyTo = 12;

    string OwnerType = 13;

    bool IsDelete = 14;

    int32 ChildCommentsCount=15;

    repeated ChildCommentItem ChildComments=16;

    bool Like = 17;

    bool Dislike = 18;
}

message ChildCommentItem {
    int64 ID = 1;

    string  Content = 2;

    string  TargetType = 3;

    int64 OwnerID = 4;

    int64 ResourceID = 5;

    bool Featured = 6;

    bool Deleted = 7;

    Creator  Creator  = 8;

    int64 CreatedAt = 9;

    CommentStat  Stat = 11;

    Creator  ReplyTo = 12;

    string OwnerType = 13;

    bool IsDelete = 14;

    bool Like = 15;

    bool Dislike = 16;
}

message ChildrenCommentListResp {
    repeated ChildCommentItem Items = 1;
}

message CommentListResp {
    repeated CommentInfo Items = 1;
    int32  CommentsCount = 2;
    int32  FeaturedCount = 3;
}

message AddCommentReq {
    string TargetType  = 1;
    string Content  = 2;
    int64 TargetID  = 3;
    int64 Aid  = 4;
}

message DeleteReq {
    int64 ID  = 1;
    int64 Aid = 2 ;
}

message IDResp {
    int64 ID  = 1;
}

message CommentListReq {
    int64 ResourceID = 1;
    string TargetType = 2;
    int32 Limit = 3;
    int32 Offset = 4;
    int64 Aid = 5 ;
}


message CommentStat {
    int32 LikeCount = 1 [(gogoproto.jsontag) = "like_count"];
    int32 DislikeCount = 2 [(gogoproto.jsontag) = "dislike_count"];
    int32 ChildrenCount = 3 [(gogoproto.jsontag) = "children_count"];
}


message IDReq {
    int64 ID = 1 ;
    bool UseMaster = 2;
    int64 Aid = 3 ;
}

service Comment {
    rpc GetCommentInfo(IDReq) returns (CommentInfo);
    rpc GetCommentsPaged(CommentListReq) returns (CommentListResp);
    rpc AddComment(AddCommentReq) returns (IDResp);
    rpc GetAllChildrenComment(IDReq) returns (ChildrenCommentListResp);
    rpc DeleteComment(DeleteReq) returns (EmptyStruct);
}




