syntax = "proto3";
package service.article;
option go_package = "api";


import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// EmptyStruct 空的message，对应真实service只返回error，没有具体返回值
message EmptyStruct {
}

message Creator {
    int64 ID = 1 [(gogoproto.jsontag) = "id"];

    string  UserName = 2 [(gogoproto.jsontag) = "user_name"];

    string Avatar   = 3 [(gogoproto.jsontag) = "avatar"];

    string  Introduction = 4 [(gogoproto.jsontag) = "introduction"] ;
}

message DBArticle {
    int64 ID = 1;
    string  Title = 2;
    string  Content = 3;
    string  ContentText = 4;
    bool  DisableRevise = 5;
    bool  DisableComment = 6;
    int64  CreatedBy = 7;
    int64 CreatedAt = 8;
    int64 UpdatedAt = 9;
}

message ArticlesResp {
    repeated DBArticle Items  = 1;
}

message ArticleInfo {
    int64 ID = 1 [(gogoproto.jsontag) = "id"];
    string  Title = 2 [(gogoproto.jsontag) = "title"];
    string  Excerpt = 3 [(gogoproto.jsontag) = "excerpt"];
    repeated string ImageUrls  = 4 [(gogoproto.jsontag) = "image_urls"];

    Creator  Creator  = 5 [(gogoproto.jsontag) = "creator"];

    // unix timestamp
    int64 CreatedAt = 6 [(gogoproto.jsontag) = "created_at"];
    // unix timestamp
    int64 UpdatedAt = 7 [(gogoproto.jsontag) = "updated_at"];

    ArticleStat  Stat = 8 [(gogoproto.jsontag) = "stat"];

    string  Content = 9 [(gogoproto.jsontag) = "content"];

    string  ContentText = 10 [(gogoproto.jsontag) = "content_text"];

    bool  DisableRevise = 11 [(gogoproto.jsontag) = "disable_revise"];

    bool  DisableComment = 12 [(gogoproto.jsontag) = "disable_comment"];

    string ChangeDesc = 13;
}

message ArticleStat {
    int32 ReviseCount = 1 [(gogoproto.jsontag) = "revise_count"];
    int32 LikeCount = 2 [(gogoproto.jsontag) = "like_count"];
    int32 DislikeCount = 3 [(gogoproto.jsontag) = "dislike_count"];
    int32 CommentCount = 4 [(gogoproto.jsontag) = "comment_count"];
}


message ReviseStat {
    int32 LikeCount = 2 [(gogoproto.jsontag) = "like_count"];
    int32 DislikeCount = 3 [(gogoproto.jsontag) = "dislike_count"];
    int32 CommentCount = 4 [(gogoproto.jsontag) = "comment_count"];
}
message ReviseInfo {
    int64 ID = 1 [(gogoproto.jsontag) = "id"];
    string  Title = 2 [(gogoproto.jsontag) = "title"];
    string  Excerpt = 3 [(gogoproto.jsontag) = "excerpt"];
    repeated string ImageUrls  = 4 [(gogoproto.jsontag) = "image_urls"];

    Creator  Creator  = 5 [(gogoproto.jsontag) = "creator"];

    // unix timestamp
    int64 CreatedAt = 6 [(gogoproto.jsontag) = "created_at"];
    // unix timestamp
    int64 UpdatedAt = 7 [(gogoproto.jsontag) = "updated_at"];

    ReviseStat  Stat = 8 [(gogoproto.jsontag) = "stat"];

    int64 ArticleID = 9 [(gogoproto.jsontag) = "article_id"];

    string  Content = 10 [(gogoproto.jsontag) = "content"];

    string  ContentText = 11 [(gogoproto.jsontag) = "content_text"];
}

message ArgAddArticle {
    string Title = 1;
    string Content = 2;
    bool DisableRevise = 3;
    bool DisableComment = 4;
    repeated ArgArticleFile Files = 5;
    repeated ArgArticleRelation Relations = 6;
    int64 Aid = 7;
}

message ArgUpdateArticle {
    int64 ID = 1;
    string Title = 2;
    string Content = 3;
    bool DisableRevise = 4;
    bool DisableComment = 5;
    string ChangeDesc = 6;
    int64 Aid = 7;
}

message ArgArticleFile {
    string FileName  = 1;
    string FileURL  = 2;
    int32 Seq = 3;
}


message ArgArticleRelation {
    int64 ParentID = 1;
    int64 TopicID = 2;
    bool Primary = 3;
    string Permission = 4;
}


message IDReq {
    int64 ID = 1 [(gogoproto.jsontag) = "id"];
    string include = 2 [(gogoproto.jsontag) = "include"];
    bool UseMaster = 3;
}

message UserArticlesReq {
    int64 AccountID = 1 [(gogoproto.jsontag) = "aid"];
    int32 Limit = 2 [(gogoproto.jsontag) = "limit"];
    int32 Offset = 3 [(gogoproto.jsontag) = "offset"];
}

message UserArticlesResp {
    repeated ArticleInfo Items = 1 [(gogoproto.jsontag) = 'items'];
}


message Paging {
    bool IsEnd = 2;
    string Next = 3;
    string Prev = 4;
}


message ArticleFileResp {
    int64 ID = 1;
    string FileName = 2;
    string FileURL = 3;
    int32 Seq = 4;
}


message ArticleHistoryResp {
    int64 ID = 1;
    int64 ArticleID = 2;
    Creator Updator = 3;
    string Diff = 4;
    string ChangeDesc = 5;
    int32 Seq = 6;
    int64 CreatedAt = 7;
    int64 UpdatedAt = 8;
}


message ArticleHistoryItem {
    int64 ID = 1;
    int64 ArticleID = 2;
    Creator Updator = 3;
    string ChangeDesc = 5;
    int32 Seq = 6;
    int64 CreatedAt = 7;
    int64 UpdatedAt = 8;
}

message ArticleHistoryListResp {
	repeated ArticleHistoryItem Items = 1;
	Paging Paging = 2;
}

message ArticleRelationResp {
	int64 ID = 1;
	string CatalogFullPath = 2;
	bool Primary = 3;
	int64 ToTopicID = 4;
	string Name = 5;
	string Avatar = 6;
	string Permission = 7;
	string EditPermission = 8;
}

message ArgUpdateArticleFile {
    oneof ID {
        int64 IDValue = 1;
    }
    string FileName  = 2;
    string FileURL  = 3;
    int32 Seq      = 4;
}

message ArgSaveArticleFiles {
	repeated ArgUpdateArticleFile Items = 1;
	int64 ArticleID  = 2;
	int64 Aid  = 3;
}

message ArgSetPrimaryArticleRelation {
	int64 ID  = 1;
	int64 ArticleID  = 2;
	int64 Aid  = 3;
}

message ArgDelArticleRelation {
	int64 ID  = 1;
	int64 ArticleID  = 2;
	int64 Aid  = 3;
}

message ArgAddArticleRelation {
	int64 ArticleID  = 1;
	int64 ParentID  = 2;
	int64 TopicID  = 3;
	bool Primary  = 4;
    string Permission = 5;
	int64 Aid  = 6;
}

message AddArticleRelation {
	int64 ParentID  = 2;
	int64 TopicID  = 3;
	bool Primary  = 4;
    string Permission = 5;
	int64 Aid  = 6;
}


message ArgUpdateArticleRelation {
	int64 ID  = 1;
	bool Primary  = 4;
    string Permission = 5;
	int64 Aid  = 6;
}



service Article {
    rpc GetAllArticles(EmptyStruct) returns (ArticlesResp);
    rpc GetArticleInfo(IDReq) returns (ArticleInfo);
    rpc GetReviseInfo(IDReq) returns (ReviseInfo);
    rpc GetReviseStat(IDReq) returns (ReviseStat);
    rpc GetArticleStat(IDReq) returns (ArticleStat);
    rpc GetUserArticlesPaged(UserArticlesReq) returns (UserArticlesResp);
}



