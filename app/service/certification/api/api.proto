syntax = "proto3";
package service.certification;
option go_package = "api";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// EmptyStruct 空的message，对应真实service只返回error，没有具体返回值
message EmptyStruct {
}

message AidReq {
    int64 Aid = 1 [(gogoproto.jsontag) = "aid"];
    bool UseMaster = 2;
}


message IDCertInfo {
    int64 AccountID = 1;
    int32 Status = 2;
    string AuditConclusions =  4;
    string Name = 5;
    string IdentificationNumber  =  6;
    string IDCardType =  7;
    string IDCardStartDate =  8;
    string IDCardExpiry =  9;
    string Address =  10;
    string Sex = 11;
    string IDCardFrontPic =  12;
    string IDCardBackPic = 13;
    string FacePic = 14;
    string EthnicGroup = 15;
    int64 CreatedAt = 16;
    int64 UpdatedAt = 17;
}

message WorkCertInfo {
    int64 AccountID = 1;
    int32 Status = 2;
    string WorkPic =  4;
    string OtherPic = 5;
    string Company  =  6;
    string Department =  7;
    string Position =  8;
    int64 ExpiresAt =  9;
    string AuditResult =  10;
    int64 CreatedAt = 16;
    int64 UpdatedAt = 17;
}

message IDCertStatus {
    int32 Status = 1;
}


message WorkCertStatus {
    int32 Status = 1;
}

message WorkCertReq {
    int64 AccountID = 1;
    string WorkPic =  4;
    string OtherPic = 5;
    string Company  =  6;
    string Department =  7;
    string Position =  8;
    int64 ExpiresAt =  9;
}

message AuditWorkCertReq {
    int64 AccountID = 1;
    int64 ManagerID = 2;
    string AuditResult = 3;
    bool Approve = 4;
}


message RequestIDCertResp {
	string CloudauthPageUrl  = 1;

	STSToken STSToken  = 2;

	VerifyToken VerifyToken = 3;
}

message VerifyToken {
	// 一次认证会话的标识。
	string Token  = 1;
	// 认证会话超时时间，单位为秒。一般为1,800s。
	int32 DurationSeconds = 2;
}

message STSToken {
	// OSS AccessKey ID。
	// required: true
	string AccessKeyId = 1;
	// OSS AccessKey密钥
	string AccessKeySecret = 2;
	// STS token过期时间。
	string Expiration = 3;
	// OSS endpoint
	string EndPoint = 4;
	// OSS bucket，认证服务指定的文件上传 Bucket。
	string BucketName = 5;
	//  一个认证请求生成的用来上传的目录，业务方需要将文件上传到这个目录。
	string Path = 6;
	// STS 访问Token。
	string Token = 7;
}

message WorkCertPagedReq {
    oneof Status {
        int32 StatusValue = 1;
    }
    int32 Limit = 2 [(gogoproto.jsontag) = "limit"];
    int32 Offset = 3 [(gogoproto.jsontag) = "offset"];
}

message WorkCertItem {
    int64 ID  = 1;
    int64 AccountID   = 3;
    int32  Status = 4;
    string WorkPic     = 5;
    string OtherPic    = 6;
    string Company     = 7;
    string Department  = 8;
    string Position    = 9;
    int64 ExpiresAt   = 10;
    string AuditResult = 11;
    int64 CreatedAt   = 12;
    int64 UpdatedAt   = 13;
}

message WorkCertPagedResp {
    repeated WorkCertItem Items = 1;
}


service Certification {
    rpc RequestIDCert(AidReq) returns (RequestIDCertResp);
    rpc RefreshIDCertStatus(AidReq) returns (IDCertStatus);
    rpc GetIDCert(AidReq) returns (IDCertInfo);
    rpc GetIDCertStatus(AidReq) returns (IDCertStatus);

    rpc RequestWorkCert(WorkCertReq) returns (EmptyStruct);
    rpc AuditWorkCert(AuditWorkCertReq) returns (EmptyStruct);
    rpc GetWorkCert(AidReq) returns (WorkCertInfo);

    rpc GetWorkCertsPaged(WorkCertPagedReq) returns (WorkCertPagedResp);

    rpc GetWorkCertStatus(AidReq) returns (WorkCertStatus);
}


