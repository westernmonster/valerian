syntax = "proto3";
package service.discuss;
option go_package = "api";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// EmptyStruct 空的message，对应真实service只返回error，没有具体返回值
message EmptyStruct {
}

message DiscussionStat {
    int32 LikeCount = 1 ;
    int32 DislikeCount = 2 ;
    int32 CommentCount = 3 ;
}

message CategoriesResp {
    repeated CategoryInfo items = 1 ;
}

message CategoryInfo {
    int64 ID = 1 ;

    int64 TopicID = 2 ;

    string  Name = 3  ;

    int32  Seq = 4  ;
}


message Creator {
    int64 ID = 1 ;

    string  UserName = 2 ;

    string Avatar   = 3 ;

    string  Introduction = 4  ;
}



message DiscussionInfo {
    int64 ID = 1 ;

    int64 TopicID = 2 ;

    int64 CategoryID = 3 ;

    Creator Creator = 4 ;

    string  Title = 5  ;

    string  Excerpt = 6 ;


    // unix timestamp
    int64 CreatedAt = 7 ;

    // unix timestamp
    int64 UpdatedAt = 8 ;

    DiscussionStat  Stat = 9 ;

    repeated string ImageUrls  = 10 ;

    string  Content = 11 ;

    string  ContentText = 12 ;

    CategoryInfo CategoryInfo = 13 ;

    repeated DiscussionFile Files  = 14 ;
}


message UserDiscussionsReq {
    int64 AccountID = 1;
    int32 Limit = 2 ;
    int32 Offset = 3;
    int64 Aid = 4;
}

message TopicDiscussionsReq {
    int64 TopicID = 1;
    int64 CategoryID = 2;
    int32 Limit = 3;
    int32 Offset = 4;
    int64 Aid = 5;
}

message DiscussionsResp {
    repeated DiscussionInfo Items = 1;
}

message DiscussionFile {
    int64 ID = 1;
    string FileName = 2;
    string FileURL = 3;
    int32 Seq = 4;
    string FileType = 5;
    string PdfURL = 6;
    int64 CreatedAt = 7 ;
}

message DiscussionFilesResp {
    repeated  DiscussionFile Items = 1;
}

message IDReq {
    int64 ID = 1;
    string include = 2 ; ;
    bool UseMaster = 3;
    int64 Aid = 4;
}

message CategoriesReq {
    int64 TopicID = 1 ;
    bool UseMaster = 2;
    int64 Aid = 3;
}

message ArgDisucssCategory {
    oneof ID {
        int64 IDValue = 1;
    }

    string Name = 2;
    int32 Seq = 3;
}

message ArgSaveDiscussCategories {
    int64 TopicID = 1;
    int64 Aid = 2;
    repeated ArgDisucssCategory Items = 3;
}

message ArgAddDiscussion {
    int64 TopicID = 1;
    int64 CategoryID = 2;
    oneof Title {
        string TitleValue = 3;
    }
    string Content = 4;
    repeated  ArgDiscussionFile Files = 5;
    int64 Aid = 6;
}

message ArgDiscussionFile {
    oneof ID {
        int64 IDValue = 1;
    }
    string FileName  = 2;
    string FileType  = 3;
    string FileURL  = 4;
    int32 Seq = 5;
}

message ArgUpdateDiscussion {
    int64 ID = 1;
    oneof Title {
        string TitleValue = 2;
    }
    string Content = 3;
    int64 Aid = 6;
}

message ArgSaveDiscussionFiles {
    int64 DiscussionID = 1;
    int64 Aid = 2;
    repeated ArgDiscussionFile Items = 3;
}

message IDsResp {
    repeated int64 IDs = 1 ;
}

message IDResp {
    int64 ID = 1;
}


service Discussion {
    rpc GetDiscussionInfo(IDReq) returns (DiscussionInfo);
    rpc GetDiscussionStat(IDReq) returns (DiscussionStat);
    rpc SaveDiscussionCategories(ArgSaveDiscussCategories) returns (EmptyStruct);
    rpc AddDiscussion(ArgAddDiscussion) returns (IDResp);
    rpc UpdateDiscussion(ArgUpdateDiscussion) returns (EmptyStruct);
    rpc DelDiscussion(IDReq) returns (EmptyStruct);
    rpc GetDiscussionCategories(CategoriesReq) returns (CategoriesResp);
    rpc GetUserDiscussionsPaged(UserDiscussionsReq) returns (DiscussionsResp);
    rpc GetTopicDiscussionsPaged(TopicDiscussionsReq) returns (DiscussionsResp);
    rpc GetUserDiscussionIDsPaged(UserDiscussionsReq) returns (IDsResp);
    rpc SaveDiscussionFiles(ArgSaveDiscussionFiles) returns (EmptyStruct);
    rpc GetDiscussionFiles(IDReq) returns (DiscussionFilesResp);
}

