syntax = "proto3";
package service.discuss;
option go_package = "api";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

// EmptyStruct 空的message，对应真实service只返回error，没有具体返回值
message EmptyStruct {
}

message DiscussionStat {
    int32 LikeCount = 1 [(gogoproto.jsontag) = "like_count"];
    int32 CommentCount = 2 [(gogoproto.jsontag) = "comment_count"];
}


message DiscussionInfo {
    int64 ID = 1 [(gogoproto.jsontag) = "id"];
    int64 TopicID = 2 [(gogoproto.jsontag) = "topic_id"];
    int64 CategoryID = 3 [(gogoproto.jsontag) = "category_id"];
    int64 CreatedBy = 4 [(gogoproto.jsontag) = "created_by"];

    oneof Title {
        string  TitleValue = 5 [(gogoproto.jsontag) = "title"] ;
    }

    string  Content = 6 [(gogoproto.jsontag) = "content"];

    string  ContentText = 7 [(gogoproto.jsontag) = "content_text"];


    // unix timestamp
    int64 CreatedAt = 8 [(gogoproto.jsontag) = "created_at"];

    // unix timestamp
    int64 UpdatedAt = 9 [(gogoproto.jsontag) = "updated_at"];

    DiscussionStat  Stat = 10 [(gogoproto.jsontag) = "stat"];

    bool Deleted = 11 [(gogoproto.jsontag) = "deleted"];
}

message IDReq {
    int64 ID = 1 [(gogoproto.jsontag) = "id"];
}





service Discussion {
    rpc  GetDiscussionInfo(IDReq) returns (DiscussionInfo);
}



